name: Build and Release

env:
  APP_NAME: BiliBili_Livestream_Reminder

on:
  push:
    tags:
      - "v*.*.*"

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-22.04, windows-latest, macos-latest]
        include:
          - os: ubuntu-22.04
            arch: x86_64
            platform: linux
            ext: tar.gz
          - os: windows-latest
            arch: x86_64
            platform: windows
            ext: zip
          - os: macos-latest
            arch: x86_64
            platform: darwin
            ext: tar.gz

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          submodules: 'recursive'

      - name: Setup Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'

      - name: Install Dependencies
        run: pip install -r requirements.txt

      - name: Build Executable
        uses: Nuitka/Nuitka-Action@main
        with:
          nuitka-version: main
          script-name: main.py
          mode: app
          output-file: ${{ env.APP_NAME }}

      - name: Package Binary
        shell: bash
        run: |
          if [ "${{ matrix.os }}" = "ubuntu-22.04" ]; then
            tar -czvf ${{ env.APP_NAME }}-${{ matrix.arch }}-${{ matrix.platform }}.${{ matrix.ext }} -C build ${{ env.APP_NAME }}
          elif [ "${{ matrix.os }}" = "windows-latest" ]; then
            cd build
            7z a ../${{ env.APP_NAME }}-${{ matrix.arch }}-${{ matrix.platform }}.${{ matrix.ext }} ${{ env.APP_NAME }}.exe
          elif [ "${{ matrix.os }}" = "macos-latest" ]; then
            cd build
            mv main.app ${{ env.APP_NAME }}.app
            tar -czvf ../${{ env.APP_NAME }}-${{ matrix.arch }}-${{ matrix.platform }}.${{ matrix.ext }} ${{ env.APP_NAME }}.app
          fi

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ runner.os }} Build
          path: ${{ env.APP_NAME }}-${{ matrix.arch }}-${{ matrix.platform }}.${{ matrix.ext }}
          compression-level: 0

  release:
    needs: build

    runs-on: ubuntu-latest

    permissions:
      contents: write

    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
          merge-multiple: true

      - name: Draft Release
        uses: softprops/action-gh-release@v2
        with:
          draft: true
          files: artifacts/*
